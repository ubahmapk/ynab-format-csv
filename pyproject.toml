[tool.poetry]
name = "ynab-format-csv"
version = "0.1.1"
description = "Python script to prepare CSV files for import to YNAB"
authors = ["Jon Mark Allen <ubahmapk@gmail.com>"]
license = "MIT"
readme = "README.md"


[tool.poetry.scripts]
ynab-format-csv = "ynab_format_csv.app:main"

[tool.poetry.dependencies]
python = ">=3.12"
click = ">=8.1.7"
black = ">=24.10.0"
pandas = ">=2.2.3"
loguru = ">=0.7.2"


[tool.poetry.group.dev.dependencies]
bandit = ">=1.7.10"
black = ">=24.10.0"
isort = ">=5.13.2"
ruff = ">=0.7.1"
pre-commit = ">=4.0.1"
pytest = ">=8.3.3"
pytest-cov = ">=5.0.0"
vermin = ">=1.6.0"
ipython = "^8.29.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.bandit]
exclude_dirs = ["*/tests"]
#tests = ["B201", "B301"]
skips = ["B311"]

[tool.black]
line-length = 120
exclude = "__version__.py"

[tool.isort]
profile = "black"
line_length = 120

[tool.ruff]
exclude = ["*/tests/"]
line-length = 120
target-version = "py310"
lint.select = [
    "E",   # Pycodestyle errors
    "F",   # Pyflakes
    "W",   # Pywicked
    "B",   # Flake8-bugbear
    "C4",  # Flake8-comprehensions
    "I",   # Isort
    "N",   # Mcabe nested complexity
    "PGH", # Flake8-pygments
    "PTH", # Flake8-pytest-helper
    "Q",   # Flake8-quotes
    "RET", # Flake8-return
    "RUF", # Ruff-specific rules
    "SIM", # Flake8-simplify
    "UP",  # Flake8-pyupgrade
    "YTT", # Flake8-2020
]
lint.ignore = ["RET501", "F541"]
